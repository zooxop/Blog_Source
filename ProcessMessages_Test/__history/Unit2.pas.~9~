unit Unit2;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls;

type
  TForm2 = class(TForm)
    ButtonWork: TButton;
    Memo1: TMemo;
    ButtonFileWrite: TButton;
    procedure FormCreate(Sender: TObject);
    procedure ButtonWorkClick(Sender: TObject);
    procedure ButtonFileWriteClick(Sender: TObject);
  private
    { Private declarations }
  public
    WorkLevel : integer;
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

{$R *.dfm}

procedure TForm2.ButtonFileWriteClick(Sender: TObject);
var myfile : TFileStream;
begin
  myfile := TFileStream.create('myOutput.txt') ;
  try
    while BytesReady > 0 do
    begin
      myfile.Write(DataBlock) ;
      dec(BytesReady,sizeof(DataBlock)) ;
      DataBlock[2] := #13; {test line 1}
      Application.ProcessMessages;
      DataBlock[2] := #13; {test line 2}
    end;
  finally
    myfile.free;
  end;

end;

procedure TForm2.ButtonWorkClick(Sender: TObject);
var
  cycle : integer;
begin
  inc(WorkLevel) ;
  for cycle := 1 to 5 do
  begin
    Memo1.Lines.Add('- Work ' + IntToStr(WorkLevel) + ', Cycle ' + IntToStr(cycle) );
    Application.ProcessMessages;
    sleep(1000) ; // or some other work
  end;
  Memo1.Lines.Add('Work ' + IntToStr(WorkLevel) + ' ended.') ;
  dec(WorkLevel) ;

end;

procedure TForm2.FormCreate(Sender: TObject);
begin
  WorkLevel := 0;
end;

end.
